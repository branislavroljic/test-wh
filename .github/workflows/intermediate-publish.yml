name: Intermediate Docker Image

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/intermediate

on:
  push:
    branches: ["main", "119-remix-refactor"]
    paths:
      - "intermediate-server/**"
  workflow_dispatch:

jobs:
  check-changes:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: last-release
        id: last-release
        shell: bash
        run: |
          tag=$(git tag --sort=creatordate | tail -2 | sed -n '1p')
          echo "Tag: $tag"
          sha=$(git show-ref --tags | grep $tag | awk '{print $1;}')
          echo "SHA: $sha"
          echo "sha=$sha" >> $GITHUB_ENV
          
      - name: Check changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: ${{ env.sha }}
          filters: |
            intermediate:
              - './intermediate-server/**'

      - name: Set `should-run` output
        run: echo "should_run=${{ steps.changes.outputs.intermediate }}" >> $GITHUB_ENV

    outputs:
      should-run: ${{ steps.changes.outputs.intermediate }}
  
  build-and-push:
    runs-on: ubuntu-latest

    needs: check-changes

    if: needs.check-changes.outputs.should-run == 'true'

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Log into ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./intermediate-server/my-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
